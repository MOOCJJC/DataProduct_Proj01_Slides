load("D:/JiajunData/Study/S130808 (Proj with DrXiaohuLi)/Reference/yelp_phoenix_academic_dataset/tr.review.rdata")
View(tr.review)
tr.review[0:10]
tr.review[1:10]
q()
install.packages("swirl")
library(swirl)
swirl()
5 +7
x <- 5+7
X
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
mysqrt <- sqrt(z-1)
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1?
1
15:10
info()
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char,"jiajunchen")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="")
paste(LETTERS, 1:4, sep="-")
bye()
exit()
quit()
swirl()
library(swirl)
swirl()
bye()
swirl()
x <- c(44,na,5,na)
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y,z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-x(2,10)]
x[-c(2,10)]
c(foo=11,bar=2,norf=NA)
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myvector <- 1:20
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(myMatrix,myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
play()
myData[1]
myData[2]
myData[1,]
myData[2,]
myData[[1]]
myData[[2]]
nxt()
class(myData)
cnames(c("patient", "age", "weight", "bp", "rating", "test"))
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
quit()
?devices()
?devices
?device
device()
dev.cur
dev.cur()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
class(p)
print(p)
?trellis.par.set
trellis.par.get()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(ggplot2)
require(gridExtra)
install.packages("gridExtra")
require(gridExtra)
?qplot
load("C:/Users/Jiajun/Git_local/MOOCJJC/RepData_PeerAssessment1/.RData")
patternWD <- tapply(weekdayData$steps, weekdayData$interval, mean, na.rm = TRUE)
head(patternWD)
patternWE <- tapply(weekendData$steps, weekendData$interval, mean, na.rm = TRUE)
head(patternWE)
qplot(interval, patternWD)
qplot(interval, patternWD, type = "l")
qplot(interval, patternWE, type = "l")
?qplot
qplot(interval, patternWE, geom = "l")
qplot(interval, patternWE, geom = "line")
qplot(interval, patternWD, geom = "line")
plot1 <- qplot(interval, patternWD, geom = "line")
plot2 <- qplot(interval, patternWE, geom = "line")
grid.arrange(plot1,plot2,nrow=2)
plot1 <- qplot(interval, patternWD, ylim = c(0,250), geom = "line")
plot2 <- qplot(interval, patternWE, ylim = c(0,250), geom = "line")
grid.arrange(plot1,plot2,nrow=2)
plot1 <- qplot(interval, patternWE, ylim = c(0,250), main = "Weekend", geom = "line")
plot2 <- qplot(interval, patternWD, ylim = c(0,250), main = "Weekday", geom = "line")
grid.arrange(plot1,plot2,nrow=2)
sessionInfo()
library(shiny)
library(shinyapps)
setwd("D:/JiajunData/Study/S140607 (Coursera - Data09 - Data Products)/Notes/Proj01")
deployApp()
deployApp()
deployApp()
?deployApp
deployApp(appName="DPProj01")
library(slidify)
setwd("D:/JiajunData/Study/S140607 (Coursera - Data09 - Data Products)/Notes/Proj01/mySlides")
slidify("index.Rmd")
publish(user="MOOCJJC", repo="DataProduct_Proj01_Slides")
?publish
